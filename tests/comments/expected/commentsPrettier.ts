// This file was auto-generated by prisma-generator-typescript-interfaces

/**
 * The status of a user account
 */
export type UserStatus = "ACTIVE" | "INACTIVE" | "SUSPENDED";

/**
 * Represents a user in the system
 * This model contains all user-related information
 */
export interface User {
  /**
   * The unique identifier for the user
   */
  id: string;
  /**
   * The user's email address
   * Comments can be multiple lines
   * And can include a custom type definition:
   */
  email: EmailType;
  /**
   * The user's display name
   * [NotCustomType]
   * Custom types that are not at the bottom of a comment are just treated as part of the comment
   */
  name: string | null;
  /**
   * User account status
   * Comment indention will not be preserved (Prisma limitation)
   *
   * Comments can have empty lines
   *
   * @example And include JSDoc tags or other special characters: <>!@#$%^&*()`"'///_-; see :)
   */
  status: UserStatus;
  /**
   * When the user account was created
   */
  createdAt: MyDate;
  updatedAt: MyDate;
  /**
   * Posts created by this user
   */
  posts?: Post[];
  /**
   * User's profile information
   */
  profile?: Profile | null;
}

/**
 * Extended profile information for a user
 */
export interface Profile {
  /**
   * The unique identifier for the profile
   */
  id: string;
  bio: string | null;
  /**
   * URL to the user's avatar image
   */
  avatar: { url: string; width: number; height: number } | null;
  /**
   * The user this profile belongs to
   */
  user?: User;
  /**
   * Reference to the user
   */
  userId: string;
}

/**
 * A blog post written by a user
 */
export interface Post {
  /**
   * The unique identifier for the post
   */
  id: string;
  /**
   * The title of the post
   * Should be descriptive and engaging
   */
  title: string;
  /**
   * The main content of the post
   * Can contain markdown formatting
   */
  content: string;
  /**
   * Whether the post is published and visible to readers
   */
  published: boolean;
  /**
   * When the post was created
   */
  createdAt: Date;
  /**
   * When the post was last updated
   */
  updatedAt: Date;
  /**
   * The author of this post
   */
  author?: User;
  /**
   * Reference to the author
   */
  authorId: string;
  /**
   * Post metadata
   */
  meta: JsonValue;
}

/**
 * Represents an address
 * Used for MongoDB composite types
 */
export interface Address {
  /**
   * Street name and number
   */
  street: string;
  /**
   * City name
   */
  city: string;
  /**
   * State or province
   */
  state: string;
  /**
   * Postal or ZIP code
   */
  zipCode: string;
  /**
   * Country name
   */
  country: string;
}

type EmailType = { address: string; domain: string };

type MyDate = { time: number };

type JsonValue =
  | string
  | number
  | boolean
  | { [key in string]?: JsonValue }
  | Array<JsonValue>
  | null;
